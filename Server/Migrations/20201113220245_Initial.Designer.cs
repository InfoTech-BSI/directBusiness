// <auto-generated />
using System;
using DirectBusiness.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DirectBusiness.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201113220245_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DirectBusiness.Shared.Contrato", b =>
                {
                    b.Property<int>("IdContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DataFim")
                        .HasColumnType("int");

                    b.Property<int>("DataInicio")
                        .HasColumnType("int");

                    b.Property<int>("IdImovel")
                        .HasColumnType("int");

                    b.Property<int>("IdInteressado")
                        .HasColumnType("int");

                    b.Property<int>("IdProprietario")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoContrato")
                        .HasColumnType("int");

                    b.Property<int?>("ImovelIdImovel")
                        .HasColumnType("int");

                    b.Property<int?>("Pessoa2IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaIdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("TipoContratoIdTipoContrato")
                        .HasColumnType("int");

                    b.Property<double>("ValorNegociado")
                        .HasColumnType("double");

                    b.HasKey("IdContrato");

                    b.HasIndex("ImovelIdImovel");

                    b.HasIndex("Pessoa2IdPessoa");

                    b.HasIndex("PessoaIdPessoa");

                    b.HasIndex("TipoContratoIdTipoContrato");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("DirectBusiness.Shared.Imovel", b =>
                {
                    b.Property<int>("IdImovel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Estacionamento")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<double>("Metragem")
                        .HasColumnType("double");

                    b.Property<bool>("Mobiliado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaIdPessoa")
                        .HasColumnType("int");

                    b.Property<int>("QtdeBanheiros")
                        .HasColumnType("int");

                    b.Property<int>("QtdeQuartos")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TipoImovel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("IdImovel");

                    b.HasIndex("PessoaIdPessoa");

                    b.ToTable("Imovel");
                });

            modelBuilder.Entity("DirectBusiness.Shared.Midia", b =>
                {
                    b.Property<int>("IdMidia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdImovel")
                        .HasColumnType("int");

                    b.Property<int?>("ImovelIdImovel")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdMidia");

                    b.HasIndex("ImovelIdImovel");

                    b.ToTable("Midia");
                });

            modelBuilder.Entity("DirectBusiness.Shared.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Renda")
                        .HasColumnType("double");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.HasKey("IdPessoa");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("DirectBusiness.Shared.PessoaFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14) CHARACTER SET utf8mb4")
                        .HasMaxLength(14);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PessoaIdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("varchar(12) CHARACTER SET utf8mb4")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.HasIndex("PessoaIdPessoa");

                    b.ToTable("PessoaFisica");
                });

            modelBuilder.Entity("DirectBusiness.Shared.PessoaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaIdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PessoaIdPessoa");

                    b.ToTable("PessoaJuridica");
                });

            modelBuilder.Entity("DirectBusiness.Shared.TipoContrato", b =>
                {
                    b.Property<int>("IdTipoContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdTipoContrato");

                    b.ToTable("TipoContrato");
                });

            modelBuilder.Entity("DirectBusiness.Shared.Contrato", b =>
                {
                    b.HasOne("DirectBusiness.Shared.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelIdImovel");

                    b.HasOne("DirectBusiness.Shared.Pessoa", "Pessoa2")
                        .WithMany()
                        .HasForeignKey("Pessoa2IdPessoa");

                    b.HasOne("DirectBusiness.Shared.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaIdPessoa");

                    b.HasOne("DirectBusiness.Shared.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoIdTipoContrato");
                });

            modelBuilder.Entity("DirectBusiness.Shared.Imovel", b =>
                {
                    b.HasOne("DirectBusiness.Shared.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaIdPessoa");
                });

            modelBuilder.Entity("DirectBusiness.Shared.Midia", b =>
                {
                    b.HasOne("DirectBusiness.Shared.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelIdImovel");
                });

            modelBuilder.Entity("DirectBusiness.Shared.PessoaFisica", b =>
                {
                    b.HasOne("DirectBusiness.Shared.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaIdPessoa");
                });

            modelBuilder.Entity("DirectBusiness.Shared.PessoaJuridica", b =>
                {
                    b.HasOne("DirectBusiness.Shared.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaIdPessoa");
                });
#pragma warning restore 612, 618
        }
    }
}
