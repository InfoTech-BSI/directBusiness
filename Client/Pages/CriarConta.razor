@page "/CriarConta"
@using System.Net.Http;
@using BlazorValidation.Data;
@inject HttpClient Http;

<div class="container text-center">
    <div class="col-md-12">
        <h2>Cadastre-se agora mesmo</h2>
        <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset" class="text-left">
            <DataAnnotationsValidator />
            <hr />
            <h4>Informações Pessoais</h4>
            <div class="row">
                <div class="form-group col-12">
                    <Label>Nome Completo</Label>
                    <InputText @bind-Value="model.pessoaFisica.Nome" class="form-control" />
                    <ValidationMessage For="@(() => model.pessoaFisica.Nome)" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 col-12">
                    <Label>CPF</Label>
                    <InputText @bind-Value="model.pessoaFisica.CPF" class="form-control input-cpf" />
                    <ValidationMessage For="@(() => model.pessoaFisica.CPF)" />
                </div>
                <div class="form-group col-md-6 col-12">
                    <Label>RG</Label>
                    <InputText @bind-Value="model.pessoaFisica.RG" class="form-control input-rg" />
                    <ValidationMessage For="@(() => model.pessoaFisica.RG)" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 col-12">
                    <Label>Data Nascimento</Label>
                    <InputDate @bind-Value="model.pessoaFisica.DataNascimento" class="form-control input-data" />
                    <ValidationMessage For="@(() => model.pessoaFisica.DataNascimento)" /> 
                </div>
                <div class="form-group col-md-6 col-12">
                    <Label>Estado civil</Label>
                    <InputSelect @bind-Value="model.pessoaFisica.EstadoCivil" class="form-control">
                        <option value=""> Selecione </option>
                        <option value="Solteiro"> Solteiro </option>
                        <option value="Relaciomento Sério"> Relaciomento Sério </option>
                        <option value="Casado"> Casado </option>
                        <option value="Separado"> Separado </option>
                        <option value="Divorciado"> Divorciado </option>
                        <option value="Viúvo"> Viúvo </option>
                    </InputSelect>
                    <ValidationMessage For="@(() => model.pessoaFisica.EstadoCivil)" /> 
                </div>
            </div>
            <hr />
            <h4>Endereço</h4>
            <div class="row align-items-end">
                <div class="form-group col-md-4 col-12">
                    <Label>CEP</Label>
                    <InputText @bind-Value="model.pessoa.CEP" class="form-control input-cep" placeholder="CEP" />
                    <ValidationMessage For="@(() => model.pessoa.CEP)" /> 
                </div>
                <div class="form-group col-md-4" onclick="buscaCEP()">
                    <a class="btn btn-primary text-center icone-cep">
                        Buscar CEP <i class="fa fa-search"></i>
                    </a>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 col-12">
                    <Label> Logradouro </Label>
                    <InputText @bind-Value="model.pessoa.Endereco" class="form-control" id="endereco" placeholder="Endereço" />
                    <ValidationMessage For="@(() => model.pessoa.Endereco)" /> 
                </div>
                <div class="form-group col-md-6 col-12">
                    <Label> Número </Label>
                    <InputNumber @bind-Value="model.pessoa.Numero" class="form-control" id="numero" placeholder="Número" />
                    <ValidationMessage For="@(() => model.pessoa.Numero)" /> 
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 col-12">
                    <Label>Bairro</Label>
                    <InputText @bind-Value="model.pessoa.Bairro" class="form-control" id="bairro" placeholder="Bairro" />
                    <ValidationMessage For="@(() => model.pessoa.Bairro)" /> 
                </div>
                <div class="form-group col-md-6 col-12">
                    <Label>Cidade</Label>
                    <InputText @bind-Value="model.pessoa.Cidade" class="form-control" id="cidade" placeholder="Cidade" />
                    <ValidationMessage For="@(() => model.pessoa.Cidade)" /> 
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 col-12">
                    <Label>Complemento</Label>
                    <InputText @bind-Value="model.pessoa.Complemento" class="form-control" id="complemento" placeholder="complemento" />
                    <ValidationMessage For="@(() => model.pessoa.Complemento)" /> 
                </div>
                <div class="form-group col-md-6 col-12">
                    <Label>UF (Estado)</Label>
                    <InputSelect @bind-Value="model.pessoaFisica.EstadoCivil" class="form-control" id="UF" >
                        <option value=""> Selecione </option>
                        <option value="AC"> Acre </option>
                        <option value="AL"> Alagoas </option>
                        <option value="AP"> Amapá </option>
                        <option value="AM"> Amazonas </option>
                        <option value="BA"> Bahia </option>
                        <option value="CE"> Ceará </option>
                        <option value="ES"> Espírito Santo </option>
                        <option value="DF"> Distrito Federal </option>
                        <option value="GO"> Goiás </option>
                        <option value="MA"> Maranhão </option>
                        <option value="MT"> Mato Grosso </option>
                        <option value="MS"> Mato Grosso do Sul </option>
                        <option value="MG"> Minas Gerais </option>
                        <option value="PA"> Pará </option>
                        <option value="PB"> Paraíba </option>
                        <option value="PR"> Paraná </option>
                        <option value="PE"> Pernambuco </option>
                        <option value="PI"> Piauí </option>
                        <option value="RJ"> Rio de Janeiro </option>
                        <option value="RN"> Rio Grande do Norte </option>
                        <option value="RS"> Rio Grande do Sul </option>
                        <option value="RO"> Rondônia </option>
                        <option value="RR"> Roraima </option>
                        <option value="SC"> Santa Catarina </option>
                        <option value="SP"> São Paulo </option>
                        <option value="SE"> Sergipe </option>
                        <option value="TO"> Tocantins </option>
                    </InputSelect>
                    <ValidationMessage For="@(() => model.pessoa.Uf)" /> 
                </div>
            </div>
            <hr />
            <h4>Dados de adicionais</h4>
            <div class="row">
                <div class="form-group col-md-6 col-12">
                    <Label for="Renda">Renda</Label>
                    <InputNumber @bind-Value="model.pessoa.Renda" class="form-control input-valor" id="Renda" placeholder="Renda" />
                    <ValidationMessage For="@(() => model.pessoa.Renda)" /> 
                </div>
                <div class="form-group col-md-6 col-12">
                    <Label for="celular">Celular</Label>
                    <InputText @bind-Value="model.pessoa.Celular" class="form-control input-celular" id="celular" placeholder="Celular"/>
                    <ValidationMessage For="@(() => model.pessoa.Celular)" /> 
                </div>
            </div>
            <hr />
            <h4>Dados de acesso</h4>
            <div class="form-group">
                <Label>Email</Label>
                <InputText @bind-Value="model.pessoa.Email" class="form-control" placeholder="Email" />
                <ValidationMessage For="@(() => model.pessoa.Email)" /> 
            </div>
            <div class="row">
                <div class="row form-group col-md-6 col-12 p-0 m-0 align-items-end">
                    <div class="form-group col-md-7 col-12">
                        <Label>Senha</Label>
                        <InputText @bind-Value="model.pessoa.Senha" class="form-control senha" id="senha"
                        placeholder="Senha" />
                        <ValidationMessage For="@(() => model.pessoa.Senha)" /> 
                    </div>
                    <div class="form-group col-md-5 col-12">
                        <a class="btn btn-primary verSenha">
                            <span class="senha">Ver senha</span>
                        </a>
                    </div>
                </div>
                <div class="row form-group col-md-6 col-12 p-0 m-0 align-items-end">
                    <div class="form-group col-md-7 col-12">
                        <Label>Confirmar senha</Label>
                        <InputText @bind-Value="model.pessoa.ConfirmarSenha" class="form-control senha" min="5" id="senhaConfimar"
                        name="senhaConfimar" placeholder="Confirmar senha" />
                        <ValidationMessage For="@(() => model.pessoa.ConfirmarSenha)" /> 
                    </div>
                    <div class="form-group col-md-5 col-12">
                        <a class="btn btn-primary verSenha">
                            <span class="senha">Ver senha</span>
                        </a>
                    </div>
                </div>
            </div>
        </EditForm>
        @* <EditForm Model="@pessoa" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset" class="text-left">
            
            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="CheckTermos">
                <Label class="form-check-Label" for="CheckTermos">
                    Concordo com os <a>Termos de uso</a>
                </Label>
            </div>
            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="CheckMarketing">
                <Label class="form-check-Label" for="CheckMarketing">
                    Aceito o <a>uso dos meus dados para marketing personalizado</a>
                </Label>
            </div>
        </EditForm> *@
            <div class="text-center">
                <a class="btn btn-secondary" href="javascript:history.back()">Voltar</a>
                <button type="submit" class="btn btn-success">Fazer o cadastro</button>
            </div>
        <br>
    </div>
</div>

@code {
    /* private PessoaFisica pessoaFisica = new PessoaFisica();
    private Pessoa pessoa = new Pessoa(); */
    private EditContext editContext { get; set; }

    ComplexModel model = new ComplexModel { 
        pessoa = new Pessoa(), 
        pessoaFisica = new PessoaFisica()
    };

    private async Task HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");

        //Enviar dados para o Controller no Backend
        var teste = await Http.PostAsJsonAsync("/Register2/Create", model);
    }

    private void HandleReset()
    {
        model = new ComplexModel { 
            pessoa = new Pessoa(), 
            pessoaFisica = new PessoaFisica()
        };
        editContext = new EditContext(model);
    }
}